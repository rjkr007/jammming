{"version":3,"sources":["Components/Track/Track.js","Components/TrackList/TrackList.js","Components/Playlist/Playlist.js","Components/SearchBar/SearchBar.js","Components/SearchResults/SearchResults.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Track","props","addTrack","bind","removeTrack","this","isRemoval","className","onClick","onAdd","track","onRemove","name","artist","album","renderAction","React","Component","TrackList","tracks","map","id","Playlist","handleNameChange","event","onNameChange","target","value","onChange","playlistTracks","onSave","SearchBar","state","term","search","handleTermChange","onSearch","setState","placeholder","SearchResults","searchResults","App","playlistName","updatePlaylistName","savePlaylist","find","savedTrack","push","filter","currentTrack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d446f8ec.chunk.js","sourcesContent":["import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n         constructor(props){\n        super(props);\n\n        this.addTrack = this.addTrack.bind(this);\n         this.removeTrack = this.removeTrack.bind(this);\n      }\n\n      renderAction() {\n        if (this.props.isRemoval) {\n          return (\n            <button className=\"Track-action\" onClick={this.removeTrack}>\n              -\n            </button>\n          );\n           } else {\n            return (\n<button className=\"Track-action\" onClick={this.addTrack}>\n              +\n            </button>\n            );\n          }\n        }\n    \n        addTrack(props) {\n          this.props.onAdd(this.props.track)\n        }\n\n        removeTrack(props) {\n          this.props.onRemove(this.props.track) \n        }\n\n    render() {\n        return (\n<div className=\"Track\">\n  <div className=\"Track-information\">\n    <h3>{this.props.track.name}</h3>\n    <p>{this.props.track.artist} | {this.props.track.album}</p>\n  </div>\n  {this.renderAction()}\n</div>\n        );\n    }\n}\n\nexport default Track;\n","import React from \"react\";\nimport Track from \"../Track/Track\";\nimport \"./TrackList.css\";\n\nexport default class TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return (\n            <Track\n              track={track}\n              key={track.id}\n              onAdd={this.props.onAdd}\n              onRemove={this.props.onRemove}\n              isRemoval={this.props.isRemoval}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TrackList from \"../TrackList/TrackList\";\nimport \"./Playlist.css\";\n\nexport default class Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input value=\"New Playlist\" onChange={this.handleNameChange} />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\">SEARCH</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nexport default class SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.searchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Playlist from \"../Playlist/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"New Playlist Name\",\n      playlistTracks: [],\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks.filter(\n      (currentTrack) => track.id !== currentTrack.id\n    );\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    // let trackURIs = this.state.playlistTracks.map((track) => track.uri);\n    \n  }\n\n  search(term) {\n  //  Spotify.search(term).then((searchResults) => {\n  //    this.setState({ searchResults: searchResults });\n  //  });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}